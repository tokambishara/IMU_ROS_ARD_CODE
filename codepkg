#!/usr/bin/env python

import rospy
import math
from std_msgs.msg import Float32
from std_msgs.msg import String
from std_msgs.msg import Float64
yaw = 0


def get_ax(\imu\data):
        global ax
	ax = \imu\data.linear_acceleration.x()
	ax = ax.data
        return ax

def get_ay(\imu\data):
        global ay
	ay = \imu\data.linear_acceleration.y()
	ay = ay.data
        return ay

def get_az(\imu\data):
        global az
	az = \imu\data.linear_acceleration.z()
	az = az.data
        return az

yaw=180*atan(az/sqrt(ax*ax+az*az))/3.14


def listener():
	
	global ax
        global ay
        global az
	
	rospy.Subscriber("\imu\data", Float64, get_ax)
	rospy.Subscriber("\imu\data", Float64, get_ay)
	rospy.Subscriber("\imu\data", Float64, get_az)
        
        ang_pub = rospy.Publisher('yaw_angle', Float64, queue_size=10)
        rospy.init_node('Node_d', anonymous=True)
        ang_pub.publish(yaw)
	rospy.spin()

if __name__ == '__main__':
	listener()
